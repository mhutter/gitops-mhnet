apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgres
spec:
  replicas: 1
  serviceName: "postgres"
  template:
    spec:
      containers:
        - name: postgres
          image: "docker.io/library/postgres:16.1-alpine"
          env:
            - name: POSTGRES_DB
              value: invidious
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db-user
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-credentials
                  key: db-password
            - name: PGDATA
              value: /data/pgdata
          ports:
            - containerPort: 5432
              name: postgres
          volumeMounts:
            - name: pgdata
              mountPath: /data
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - 'pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB"'
          livenessProbe:
            tcpSocket:
              port: 5432
          resources:
            requests:
              cpu: 10m
              memory: 32Mi
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]
      securityContext:
        runAsNonRoot: true
        runAsUser: 1636
        runAsGroup: 1636
        fsGroup: 1636
        seccompProfile:
          type: RuntimeDefault

  volumeClaimTemplates:
    - metadata:
        name: pgdata
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
