# https://kubernetes.io/docs/concepts/services-networking/service/
apiVersion: v1
kind: Service
metadata:
  name: solr
  labels:
    app.kubernetes.io/name: solr
    app.kubernetes.io/component: search
spec:
  ports:
    - name: solr
      port: 8983
  selector:
    app.kubernetes.io/name: solr
    app.kubernetes.io/component: search

---
# https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: solr
  labels:
    app.kubernetes.io/name: solr
    app.kubernetes.io/component: search
spec:
  serviceName: solr
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: solr
      app.kubernetes.io/component: search
  template:
    metadata:
      labels:
        app.kubernetes.io/name: solr
        app.kubernetes.io/component: search
    spec:
      containers:
        - name: solr
          image: "docker.io/library/solr:9.6.1-slim"
          command:
            - docker-entrypoint.sh
            - solr-precreate
            - docspell
          ports:
            - containerPort: 8983
          volumeMounts:
            - name: data
              mountPath: /var/solr
          readinessProbe:
            httpGet:
              path: /solr/admin/info/system
              port: 8983
          livenessProbe:
            tcpSocket:
              port: solr
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop: ["ALL"]

      securityContext:
        runAsNonRoot: true
        runAsUser: 22304
        runAsGroup: 22304
        fsGroup: 22304
        seccompProfile:
          type: RuntimeDefault

  volumeClaimTemplates:
    - metadata:
        name: data
      spec:
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
